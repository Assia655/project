
services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile  # Spécifie explicitement le chemin du Dockerfile
    ports:
      - "8005:8005"
    depends_on:
      - user_service
      - transaction_service
      - blockchain_service
    environment:
      USER_SERVICE_URL: "http://user_service:8004"
      TRANSACTION_SERVICE_URL: "http://transaction_service:8003"
      BLOCKCHAIN_SERVICE_URL: "http://blockchain_service:8001"
    networks:
      - fintech-network

  # User Service
  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile  # Spécifie explicitement le chemin du Dockerfile
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: "postgresql://user:password@user_db:5432/users"
    depends_on:
      - user_db
    networks:
      - fintech-network

  # Transaction Service
  transaction_service:
    build:
      context: ./transaction_service
      dockerfile: Dockerfile  # Spécifie explicitement le chemin du Dockerfile
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: "postgresql://user:password@transaction_db:5432/transactions"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    depends_on:
      - transaction_db
      - kafka
    networks:
      - fintech-network

  # Blockchain Service
  blockchain_service:
    build:
      context: ./blockchain_service
      dockerfile: Dockerfile  # Spécifie explicitement le chemin du Dockerfile
    ports:
      - "8001:8001"
    networks:
      - fintech-network

  # User Database
  user_db:
    image: postgres:15
    container_name: user_db
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "users"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - fintech-network

  # Transaction Database
  transaction_db:
    image: postgres:15
    container_name: transaction_db
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "transactions"
    volumes:
      - transaction_db_data:/var/lib/postgresql/data
    networks:
      - fintech-network

  # Price Service
  price_service:
    build:
      context: ./price_service/app
      dockerfile: Dockerfile  # Spécifie explicitement le chemin du Dockerfile
    environment:
      DATABASE_URL: "postgresql://user:password@price_service_db:5432/price_service_db"
    depends_on:
      - price_service_db
    networks:
      - fintech-network

  # Price Service Database
  price_service_db:
    image: postgres:15
    container_name: price_service_db
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "price_service_db"
    volumes:
      - price_service_db_data:/var/lib/postgresql/data
    networks:
      - fintech-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
    ports:
      - "9092:9092"
    networks:
      - fintech-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - fintech-network

networks:
  fintech-network:
    driver: bridge

volumes:
  user_db_data:
  transaction_db_data:
  price_service_db_data:
